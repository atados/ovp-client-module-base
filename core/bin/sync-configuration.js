const legacyGlob = require('glob')
const chalk = require('chalk')
const path = require('path')
const fs = require('fs')
const { promisify } = require('util')

const stat = promisify(fs.stat)
const glob = promisify(legacyGlob)
const readFile = promisify(fs.readFile)

async function main() {
  const matches = await glob(path.resolve('base', 'core', 'config', '{.,}**'))

  return Promise.all(
    matches.map(async filepath => {
      const filename = path.basename(filepath)
      const newFilePath = path.resolve(filename)
      const fileStat = await stat(filepath)
      let isAutoGeneratedFile = false

      if (fileStat.isDirectory()) {
        return
      }

      try {
        const targetPathStat = await stat(newFilePath)

        if (targetPathStat.isDirectory()) {
          console.error(
            `> Failed to create '${chalk.cyan(
              filename,
            )}'. It already exists as a directory`,
          )
          return
        } else {
          const fileContent = await readFile(newFilePath, 'utf8')

          fileContent.split('\n').some(line => {
            const isComment = line.trim().startsWith('//')
            if (isComment && line.includes('@channel:update')) {
              isAutoGeneratedFile = true
              return true
            }

            return !isComment
          })

          if (!isAutoGeneratedFile) {
            console.log(
              chalk.gray(
                `> Skipping ${chalk.cyan(filename)} since it already exists`,
              ),
            )
            // Skip since the we shouldn't override the current content
            return
          }
        }
      } catch (error) {
        // File doesn't exist yet. Continue
      }

      if (filepath.endsWith('.js')) {
        console.log(
          `> ${isAutoGeneratedFile ? 'Updating' : 'Writing'} ${chalk.cyan(
            filename,
          )}`,
        )
        fs.writeFileSync(
          newFilePath,
          `// Este arquivo é criado automaticamente.\n` +
            `// Remova a linha seguinte caso queira controlá-lo manualmente.\n` +
            `// @channel:update\n` +
            `module.exports = require('./${path.join(
              'base',
              'core',
              'config',
              path.basename(filename, path.extname(filename)),
            )}')\n`,
          'utf-8',
        )
      } else {
        console.log(`> Copying ${chalk.cyan(filename)}`)
        fs.copyFileSync(filepath, newFilePath)
      }
    }),
  )
}

main()
